package Tosf::Fsm::ATo;
#================================================================--
# File Name    : Fsm/ATo.pm
#
# Purpose      : implements asynchronous timeout task To
#
# Author       : Peter Walsh, Vancouver Island University
#
# System       : Perl (Linux)
#
#=========================================================

$| = 1;
use strict;
use warnings;

include(mmt.pl)

sub  new {
   my $class = shift @_;
   my %params = @_;

   my $self = {
      taskName => my $taskName, 
      timeoutSv => my $timeoutSv
   };

   if (defined($params{taskName})) {
      $self->{taskName} = $params{taskName};
   } else {
      die(Tosf::Exception::Trap->new(name => "Task::ATo taskName undefined"));
   }

   if (defined($params{timeoutSv})) {
      $self->{timeoutSv} = $params{timeoutSv};
   } else {
      die(Tosf::Exception::Trap->new(name => "Task::ATo timeoutSv undefined"));
   }
                
   bless ($self, $class);
   return $self;
}

mmt_TableBegin 


mmt_TableRow(
   "S1",

   Tosf::Table::SVAR->assign($self->{timeoutSv}, 1); 
   Tosf::Table::TASK->suspend($self->{taskName}),

   "S2"
)

mmt_TableRow(
   "S2", 

   Tosf::Table::TASK->suspend($self->{taskName}),

   "S2"
)

mmt_TableEnd

mmt_Reset(
   "S1",

   Tosf::Table::TASK->clear_elapsedTime($self->{taskName});
   Tosf::Table::SVAR->assign($self->{timeoutSv}, 0)   
)


1;
